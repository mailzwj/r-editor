!function(E){function Q(Q){for(var F,U,B=Q[0],s=Q[1],n=Q[2],L=0,x=[];L<B.length;L++)U=B[L],i[U]&&x.push(i[U][0]),i[U]=0;for(F in s)Object.prototype.hasOwnProperty.call(s,F)&&(E[F]=s[F]);for(l&&l(Q);x.length;)x.shift()();return e.push.apply(e,n||[]),t()}function t(){for(var Q,F=0;F<e.length;F++){for(var U=e[F],B=!0,s=1;s<U.length;s++){var n=U[s];0!==i[n]&&(B=!1)}B&&(e.splice(F--,1),Q=L(L.s=U[0]))}return Q}var U={},i={index:0},e=[];function L(Q){if(U[Q])return U[Q].exports;var F=U[Q]={i:Q,l:!1,exports:{}};return E[Q].call(F.exports,F,F.exports,L),F.l=!0,F.exports}L.m=E,L.c=U,L.d=function(Q,F,U){L.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},L.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},L.t=function(F,Q){if(1&Q&&(F=L(F)),8&Q)return F;if(4&Q&&"object"==typeof F&&F&&F.__esModule)return F;var U=Object.create(null);if(L.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:F}),2&Q&&"string"!=typeof F)for(var B in F)L.d(U,B,function(Q){return F[Q]}.bind(null,B));return U},L.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return L.d(F,"a",F),F},L.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},L.p="";var F=window.webpackJsonp=window.webpackJsonp||[],B=F.push.bind(F);F.push=Q,F=F.slice();for(var s=0;s<F.length;s++)Q(F[s]);var l=B;e.push(["./example/index.js","common"]),t()}({"./dist/index.min.js":
/*!***************************!*\
  !*** ./dist/index.min.js ***!
  \***************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\n!function (e, t) {\n  "object" == ( false ? undefined : _typeof(exports)) && "object" == ( false ? undefined : _typeof(module)) ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(window, function () {\n  return function (e) {\n    var t = {};\n\n    function n(r) {\n      if (t[r]) return t[r].exports;\n      var o = t[r] = {\n        i: r,\n        l: !1,\n        exports: {}\n      };\n      return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n    }\n\n    return n.m = e, n.c = t, n.d = function (e, t, r) {\n      n.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: r\n      });\n    }, n.r = function (e) {\n      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: "Module"\n      }), Object.defineProperty(e, "__esModule", {\n        value: !0\n      });\n    }, n.t = function (e, t) {\n      if (1 & t && (e = n(e)), 8 & t) return e;\n      if (4 & t && "object" == _typeof(e) && e && e.__esModule) return e;\n      var r = Object.create(null);\n      if (n.r(r), Object.defineProperty(r, "default", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && "string" != typeof e) for (var o in e) {\n        n.d(r, o, function (t) {\n          return e[t];\n        }.bind(null, o));\n      }\n      return r;\n    }, n.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return n.d(t, "a", t), t;\n    }, n.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, n.p = "", n(n.s = 1);\n  }([function (e, t, n) {\n    "use strict";\n\n    e.exports = n(2);\n  }, function (e, t, n) {\n    "use strict";\n\n    n.r(t);\n    var r = n(0),\n        o = n.n(r);\n\n    function i(e) {\n      return (i = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {\n        return _typeof(e);\n      } : function (e) {\n        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof(e);\n      })(e);\n    }\n\n    function a(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n      }\n    }\n\n    function c(e) {\n      return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n        return e.__proto__ || Object.getPrototypeOf(e);\n      })(e);\n    }\n\n    function s(e, t) {\n      return (s = Object.setPrototypeOf || function (e, t) {\n        return e.__proto__ = t, e;\n      })(e, t);\n    }\n\n    function u(e) {\n      if (void 0 === e) throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n      return e;\n    }\n\n    function l(e, t, n) {\n      return t in e ? Object.defineProperty(e, t, {\n        value: n,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : e[t] = n, e;\n    }\n\n    n(4);\n\n    var f = navigator.userAgent,\n        d = f.match(/version\\/[\\d\\.]+\\ssafari\\/[\\d\\.]+/i),\n        p = (f.match(/chrome\\/[\\d\\.]+/i), f.match(/firefox\\/[\\d\\.]+/i), [{\n      title: "Heart",\n      title_cn: "心",\n      url: "http://storage.jd.com/open-chat-web/dd_web/emoji/s01.png"\n    }, {\n      title: "Touch",\n      title_cn: "摸头",\n      url: "http://storage.jd.com/open-chat-web/dd_web/emoji/s02.png"\n    }, {\n      title: "Dis",\n      title_cn: "鄙视",\n      url: "http://storage.jd.com/open-chat-web/dd_web/emoji/s03.png"\n    }, {\n      title: "Daku",\n      title_cn: "大哭",\n      url: "http://storage.jd.com/open-chat-web/dd_web/emoji/s04.png"\n    }, {\n      title: "Laugh",\n      title_cn: "大笑",\n      url: "http://storage.jd.com/open-chat-web/dd_web/emoji/s05.png"\n    }]),\n        m = function (e) {\n      function t(e) {\n        var n, r;\n        return function (e, n) {\n          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");\n        }(this), this, r = c(t).call(this, e), l(u(u(n = !r || "object" !== i(r) && "function" != typeof r ? u(this) : r)), "focusEditor", function () {\n          n.editor && n.editor.focus();\n        }), l(u(u(n)), "clearEditor", function () {\n          n.editor && (n.editor.innerHTML = "");\n        }), l(u(u(n)), "onInput", function (e) {\n          e.target.innerText || (e.target.innerHTML = "<br/>");\n          var t = window.getSelection().getRangeAt(0);\n\n          if (0 < (n.lastRange = t).startOffset) {\n            t.setStart(t.startContainer, t.startOffset - 1);\n            var r = t.toString();\n            t.collapse(), "@" === r ? (n.setState({\n              showMention: !0\n            }), document.removeEventListener("click", n.hideMention, !1), document.addEventListener("click", n.hideMention, !1)) : ":" === r ? (n.setState({\n              showEmoji: !0\n            }), document.removeEventListener("click", n.hideEmoji, !1), document.addEventListener("click", n.hideEmoji, !1)) : (document.removeEventListener("click", n.hideMention, !1), document.removeEventListener("click", n.hideEmoji, !1), n.setState({\n              showEmoji: !1,\n              showMention: !1\n            }));\n          }\n        }), l(u(u(n)), "hideMention", function () {\n          n.setState({\n            showMention: !1\n          });\n        }), l(u(u(n)), "hideEmoji", function () {\n          n.setState({\n            showEmoji: !1\n          });\n        }), l(u(u(n)), "onFocus", function () {\n          if (n.lastRange) {\n            var e = window.getSelection();\n            e.removeAllRanges(), e.addRange(n.lastRange);\n          }\n        }), l(u(u(n)), "insertMention", function (e, t) {\n          if (e.stopPropagation(), n.editor) {\n            n.editor.focus(), document.execCommand("delete");\n            var r,\n                o = window.getSelection(),\n                i = o.getRangeAt(0),\n                a = document.createElement("span");\n\n            try {\n              i.setEnd(i.endContainer, i.endOffset + 1), r = i.toString(), i.collapse(!0);\n            } catch (e) {}\n\n            a.className = "at-user", a.setAttribute("data-pin", t.pin), a.setAttribute("data-nick-name", t.nickName), a.innerText = "@" + t.nickName, a.setAttribute("contentEditable", !1), i.insertNode(a), d && o.addRange(i), o.collapseToEnd(), r || document.execCommand("insertHtml", null, "<br/>");\n          }\n        }), l(u(u(n)), "insertEmoji", function (e, t) {\n          if (e.stopPropagation(), n.editor) {\n            n.editor.focus(), document.execCommand("delete");\n            var r = window.getSelection(),\n                o = r.getRangeAt(0),\n                i = document.createElement("img");\n            i.className = "sys-emoji", i.setAttribute("data-code", t.url.substr(-7, 3)), i.setAttribute("src", t.url), o.insertNode(i), d && r.addRange(o), r.collapseToEnd();\n          }\n        }), l(u(u(n)), "insertImageFile", function (e) {\n          if (n.editor) {\n            n.editor.focus();\n            var t = window.getSelection(),\n                r = t.getRangeAt(0),\n                o = document.createElement("img");\n            o.className = "paste-image", o.setAttribute("src", e), r.insertNode(o), d && t.addRange(r), t.collapseToEnd();\n          }\n        }), l(u(u(n)), "insertHtml", function (e) {\n          e = e || "", n.editor && (n.editor.focus(), document.execCommand("insertHtml", !1, e));\n        }), l(u(u(n)), "onPaste", function (e) {\n          var t = e.clipboardData;\n\n          if (t.files && t.files.length) {\n            for (var r = 0, o = t.files.length; r < o; r++) {\n              var i = t.files[r],\n                  a = new FileReader();\n              a.addEventListener("load", function (e) {\n                var t = e.target.result;\n                n.insertImageFile(t), a = null;\n              }), a.readAsDataURL(i);\n            }\n\n            e.preventDefault();\n          } else if (t.items && t.items.length) {\n            for (var c = 0, s = t.items.length; c < s; c++) {\n              if ("text/html" === t.items[c].type) {\n                t.items[c].getAsString(function (e) {\n                  e = (e = e.replace(/<\\/?(?!img)([\\s\\S]+?)>/g, "")).replace(/(<img)([\\s\\S]*?)(\\ssrc=("|\')[^\\4]*?\\4)[^>]+?>/g, function (e, t, n, r, o) {\n                    return t + \' class="paste-image"\' + r + ">";\n                  }), n.insertHtml(e);\n                });\n                break;\n              }\n            }\n\n            e.preventDefault();\n          }\n        }), l(u(u(n)), "convertToJson", function (e) {\n          var t = {\n            rows: []\n          },\n              n = 0;\n          return (e = Array.prototype.slice.call(e)).forEach(function (e) {\n            var r, o;\n            1 === e.nodeType ? (o = "div" === e.tagName.toLowerCase() ? (n++, e.innerHTML) : e.outerHTML, (r = t.rows[n] || {\n              source: [],\n              content: ""\n            }).source.push(e), r.content += o || "") : 3 === e.nodeType ? ((r = t.rows[n] || {\n              source: [],\n              content: ""\n            }).source.push(e), r.content += e.data || e.nodeData || "") : ((r = t.rows[n] || {\n              source: [],\n              content: ""\n            }).source.push(e), r.content += e.toString()), t.rows[n] = r;\n          }), t;\n        }), l(u(u(n)), "onKeyDown", function (e) {\n          if (13 === e.keyCode) {\n            var t,\n                r = n.props || {},\n                o = r.finishKey,\n                i = void 0 === o ? "Enter" : o,\n                a = r.onFinish,\n                c = n.editor;\n\n            switch (i.replace(/\\s+/g, "")) {\n              case "Enter":\n                if (e.ctrlKey || e.metaKey) document.execCommand("insertParagraph");else {\n                  var s = c.childNodes;\n                  t = n.convertToJson(s), e.preventDefault();\n                }\n                break;\n\n              case "Ctrl+Enter":\n                if (e.ctrlKey) {\n                  var u = c.childNodes;\n                  t = n.convertToJson(u);\n                }\n\n                break;\n\n              case "Cmd+Enter":\n                if (e.metaKey) {\n                  var l = c.childNodes;\n                  t = n.convertToJson(l);\n                }\n\n                break;\n\n              case "CtrlOrCmd+Enter":\n                if (e.ctrlKey || e.metaKey) {\n                  var f = c.childNodes;\n                  t = n.convertToJson(f);\n                }\n\n            }\n\n            t && ("function" == typeof a && a(t), n.clearEditor());\n          }\n        }), l(u(u(n)), "setEditor", function (e) {\n          n.editor = e;\n        }), n.state = {\n          showMention: !1,\n          showEmoji: !1\n        }, n;\n      }\n\n      var n, f;\n      return function (e, t) {\n        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && s(e, t);\n      }(t, r.Component), n = t, (f = [{\n        key: "componentDidMount",\n        value: function value() {\n          this.focusEditor();\n        }\n      }, {\n        key: "render",\n        value: function value() {\n          var e = this,\n              t = this.props || {},\n              n = this.state || {},\n              r = t.mentionList,\n              i = void 0 === r ? [] : r,\n              a = t.emojiList,\n              c = void 0 === a ? p : a,\n              s = t.value;\n          return o.a.createElement("div", {\n            className: "chat-editor",\n            onClick: this.focusEditor\n          }, i.length && n.showMention ? o.a.createElement("div", {\n            className: "mention-list"\n          }, i.map(function (t) {\n            return o.a.createElement("div", {\n              className: "mention",\n              key: t.pin,\n              onClick: function onClick(n) {\n                return e.insertMention(n, t);\n              }\n            }, t.nickName);\n          })) : null, c.length && n.showEmoji ? o.a.createElement("div", {\n            className: "emoji-list"\n          }, c.map(function (t) {\n            return o.a.createElement("div", {\n              className: "emoji",\n              key: t.title,\n              title: t.title_cn,\n              onClick: function onClick(n) {\n                return e.insertEmoji(n, t);\n              }\n            }, o.a.createElement("img", {\n              src: t.url\n            }));\n          })) : null, o.a.createElement("div", {\n            className: "editor",\n            ref: this.setEditor,\n            contentEditable: !0,\n            onInput: this.onInput,\n            onFocus: this.onFocus,\n            onPaste: this.onPaste,\n            onKeyDown: this.onKeyDown,\n            dangerouslySetInnerHTML: {\n              __html: s || "<br/>"\n            }\n          }));\n        }\n      }]) && a(n.prototype, f), t;\n    }();\n\n    t.default = m;\n  }, function (e, t, n) {\n    "use strict";\n    /** @license React v16.7.0\n     * react.production.min.js\n     *\n     * Copyright (c) Facebook, Inc. and its affiliates.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n\n    var r = n(3),\n        o = "function" == typeof Symbol && Symbol.for,\n        i = o ? Symbol.for("react.element") : 60103,\n        a = o ? Symbol.for("react.portal") : 60106,\n        c = o ? Symbol.for("react.fragment") : 60107,\n        s = o ? Symbol.for("react.strict_mode") : 60108,\n        u = o ? Symbol.for("react.profiler") : 60114,\n        l = o ? Symbol.for("react.provider") : 60109,\n        f = o ? Symbol.for("react.context") : 60110,\n        d = o ? Symbol.for("react.concurrent_mode") : 60111,\n        p = o ? Symbol.for("react.forward_ref") : 60112,\n        m = o ? Symbol.for("react.suspense") : 60113,\n        h = o ? Symbol.for("react.memo") : 60115,\n        y = o ? Symbol.for("react.lazy") : 60116,\n        v = "function" == typeof Symbol && Symbol.iterator;\n\n    function b(e) {\n      for (var t = arguments.length - 1, n = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, r = 0; r < t; r++) {\n        n += "&args[]=" + encodeURIComponent(arguments[r + 1]);\n      }\n\n      !function (e, t, n, r, o, i, a, c) {\n        if (!e) {\n          if ((e = void 0) === t) e = Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {\n            var s = [n, void 0, void 0, void 0, void 0, void 0],\n                u = 0;\n            (e = Error(t.replace(/%s/g, function () {\n              return s[u++];\n            }))).name = "Invariant Violation";\n          }\n          throw e.framesToPop = 1, e;\n        }\n      }(!1, "Minified React error #" + e + "; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ", n);\n    }\n\n    var g = {\n      isMounted: function isMounted() {\n        return !1;\n      },\n      enqueueForceUpdate: function enqueueForceUpdate() {},\n      enqueueReplaceState: function enqueueReplaceState() {},\n      enqueueSetState: function enqueueSetState() {}\n    },\n        w = {};\n\n    function j(e, t, n) {\n      this.props = e, this.context = t, this.refs = w, this.updater = n || g;\n    }\n\n    function E() {}\n\n    function x(e, t, n) {\n      this.props = e, this.context = t, this.refs = w, this.updater = n || g;\n    }\n\n    j.prototype.isReactComponent = {}, j.prototype.setState = function (e, t) {\n      "object" != _typeof(e) && "function" != typeof e && null != e && b("85"), this.updater.enqueueSetState(this, e, t, "setState");\n    }, j.prototype.forceUpdate = function (e) {\n      this.updater.enqueueForceUpdate(this, e, "forceUpdate");\n    }, E.prototype = j.prototype;\n    var S = x.prototype = new E();\n    S.constructor = x, r(S, j.prototype), S.isPureReactComponent = !0;\n    var O = {\n      current: null,\n      currentDispatcher: null\n    },\n        _ = Object.prototype.hasOwnProperty,\n        k = {\n      key: !0,\n      ref: !0,\n      __self: !0,\n      __source: !0\n    };\n\n    function C(e, t, n) {\n      var r = void 0,\n          o = {},\n          a = null,\n          c = null;\n      if (null != t) for (r in void 0 !== t.ref && (c = t.ref), void 0 !== t.key && (a = "" + t.key), t) {\n        _.call(t, r) && !k.hasOwnProperty(r) && (o[r] = t[r]);\n      }\n      var s = arguments.length - 2;\n      if (1 === s) o.children = n;else if (1 < s) {\n        for (var u = Array(s), l = 0; l < s; l++) {\n          u[l] = arguments[l + 2];\n        }\n\n        o.children = u;\n      }\n      if (e && e.defaultProps) for (r in s = e.defaultProps) {\n        void 0 === o[r] && (o[r] = s[r]);\n      }\n      return {\n        $$typeof: i,\n        type: e,\n        key: a,\n        ref: c,\n        props: o,\n        _owner: O.current\n      };\n    }\n\n    function R(e) {\n      return "object" == _typeof(e) && null !== e && e.$$typeof === i;\n    }\n\n    var P = /\\/+/g,\n        L = [];\n\n    function T(e, t, n, r) {\n      if (L.length) {\n        var o = L.pop();\n        return o.result = e, o.keyPrefix = t, o.func = n, o.context = r, o.count = 0, o;\n      }\n\n      return {\n        result: e,\n        keyPrefix: t,\n        func: n,\n        context: r,\n        count: 0\n      };\n    }\n\n    function A(e) {\n      e.result = null, e.keyPrefix = null, e.func = null, e.context = null, e.count = 0, L.length < 10 && L.push(e);\n    }\n\n    function M(e, t, n) {\n      return null == e ? 0 : function e(t, n, r, o) {\n        var c = _typeof(t);\n\n        "undefined" !== c && "boolean" !== c || (t = null);\n        var s = !1;\n        if (null === t) s = !0;else switch (c) {\n          case "string":\n          case "number":\n            s = !0;\n            break;\n\n          case "object":\n            switch (t.$$typeof) {\n              case i:\n              case a:\n                s = !0;\n            }\n\n        }\n        if (s) return r(o, t, "" === n ? "." + N(t, 0) : n), 1;\n        if (s = 0, n = "" === n ? "." : n + ":", Array.isArray(t)) for (var u = 0; u < t.length; u++) {\n          var l = n + N(c = t[u], u);\n          s += e(c, l, r, o);\n        } else if ("function" == typeof (l = null === t || "object" != _typeof(t) ? null : "function" == typeof (l = v && t[v] || t["@@iterator"]) ? l : null)) for (t = l.call(t), u = 0; !(c = t.next()).done;) {\n          s += e(c = c.value, l = n + N(c, u++), r, o);\n        } else "object" === c && b("31", "[object Object]" == (r = "" + t) ? "object with keys {" + Object.keys(t).join(", ") + "}" : r, "");\n        return s;\n      }(e, "", t, n);\n    }\n\n    function N(e, t) {\n      return "object" == _typeof(e) && null !== e && null != e.key ? (n = e.key, r = {\n        "=": "=0",\n        ":": "=2"\n      }, "$" + ("" + n).replace(/[=:]/g, function (e) {\n        return r[e];\n      })) : t.toString(36);\n      var n, r;\n    }\n\n    function U(e, t) {\n      e.func.call(e.context, t, e.count++);\n    }\n\n    function $(e, t, n) {\n      var r,\n          o,\n          a = e.result,\n          c = e.keyPrefix;\n      e = e.func.call(e.context, t, e.count++), Array.isArray(e) ? I(e, a, n, function (e) {\n        return e;\n      }) : null != e && (R(e) && (o = c + (!(r = e).key || t && t.key === e.key ? "" : ("" + e.key).replace(P, "$&/") + "/") + n, e = {\n        $$typeof: i,\n        type: r.type,\n        key: o,\n        ref: r.ref,\n        props: r.props,\n        _owner: r._owner\n      }), a.push(e));\n    }\n\n    function I(e, t, n, r, o) {\n      var i = "";\n      null != n && (i = ("" + n).replace(P, "$&/") + "/"), M(e, $, t = T(t, i, r, o)), A(t);\n    }\n\n    var D = {\n      Children: {\n        map: function map(e, t, n) {\n          if (null == e) return e;\n          var r = [];\n          return I(e, r, null, t, n), r;\n        },\n        forEach: function forEach(e, t, n) {\n          if (null == e) return e;\n          M(e, U, t = T(null, null, t, n)), A(t);\n        },\n        count: function count(e) {\n          return M(e, function () {\n            return null;\n          }, null);\n        },\n        toArray: function toArray(e) {\n          var t = [];\n          return I(e, t, null, function (e) {\n            return e;\n          }), t;\n        },\n        only: function only(e) {\n          return R(e) || b("143"), e;\n        }\n      },\n      createRef: function createRef() {\n        return {\n          current: null\n        };\n      },\n      Component: j,\n      PureComponent: x,\n      createContext: function createContext(e, t) {\n        return void 0 === t && (t = null), (e = {\n          $$typeof: f,\n          _calculateChangedBits: t,\n          _currentValue: e,\n          _currentValue2: e,\n          _threadCount: 0,\n          Provider: null,\n          Consumer: null\n        }).Provider = {\n          $$typeof: l,\n          _context: e\n        }, e.Consumer = e;\n      },\n      forwardRef: function forwardRef(e) {\n        return {\n          $$typeof: p,\n          render: e\n        };\n      },\n      lazy: function lazy(e) {\n        return {\n          $$typeof: y,\n          _ctor: e,\n          _status: -1,\n          _result: null\n        };\n      },\n      memo: function memo(e, t) {\n        return {\n          $$typeof: h,\n          type: e,\n          compare: void 0 === t ? null : t\n        };\n      },\n      Fragment: c,\n      StrictMode: s,\n      Suspense: m,\n      createElement: C,\n      cloneElement: function cloneElement(e, t, n) {\n        null == e && b("267", e);\n        var o = void 0,\n            a = r({}, e.props),\n            c = e.key,\n            s = e.ref,\n            u = e._owner;\n\n        if (null != t) {\n          void 0 !== t.ref && (s = t.ref, u = O.current), void 0 !== t.key && (c = "" + t.key);\n          var l = void 0;\n\n          for (o in e.type && e.type.defaultProps && (l = e.type.defaultProps), t) {\n            _.call(t, o) && !k.hasOwnProperty(o) && (a[o] = void 0 === t[o] && void 0 !== l ? l[o] : t[o]);\n          }\n        }\n\n        if (1 == (o = arguments.length - 2)) a.children = n;else if (1 < o) {\n          l = Array(o);\n\n          for (var f = 0; f < o; f++) {\n            l[f] = arguments[f + 2];\n          }\n\n          a.children = l;\n        }\n        return {\n          $$typeof: i,\n          type: e.type,\n          key: c,\n          ref: s,\n          props: a,\n          _owner: u\n        };\n      },\n      createFactory: function createFactory(e) {\n        var t = C.bind(null, e);\n        return t.type = e, t;\n      },\n      isValidElement: R,\n      version: "16.7.0",\n      unstable_ConcurrentMode: d,\n      unstable_Profiler: u,\n      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n        ReactCurrentOwner: O,\n        assign: r\n      }\n    };\n    e.exports = D.default || D;\n  }, function (e, t, n) {\n    "use strict";\n    /*\n    object-assign\n    (c) Sindre Sorhus\n    @license MIT\n    */\n\n    var r = Object.getOwnPropertySymbols,\n        o = Object.prototype.hasOwnProperty,\n        i = Object.prototype.propertyIsEnumerable;\n    e.exports = function () {\n      try {\n        if (!Object.assign) return !1;\n        var e = new String("abc");\n        if (e[5] = "de", "5" === Object.getOwnPropertyNames(e)[0]) return !1;\n\n        for (var t = {}, n = 0; n < 10; n++) {\n          t["_" + String.fromCharCode(n)] = n;\n        }\n\n        if ("0123456789" !== Object.getOwnPropertyNames(t).map(function (e) {\n          return t[e];\n        }).join("")) return !1;\n        var r = {};\n        return "abcdefghijklmnopqrst".split("").forEach(function (e) {\n          r[e] = e;\n        }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, r)).join("");\n      } catch (e) {\n        return !1;\n      }\n    }() ? Object.assign : function (e, t) {\n      for (var n, a, c = function (e) {\n        if (null == e) throw new TypeError("Object.assign cannot be called with null or undefined");\n        return Object(e);\n      }(e), s = 1; s < arguments.length; s++) {\n        for (var u in n = Object(arguments[s])) {\n          o.call(n, u) && (c[u] = n[u]);\n        }\n\n        if (r) {\n          a = r(n);\n\n          for (var l = 0; l < a.length; l++) {\n            i.call(n, a[l]) && (c[a[l]] = n[a[l]]);\n          }\n        }\n      }\n\n      return c;\n    };\n  }, function (e, t, n) {\n    var r = n(5);\n    "string" == typeof r && (r = [[e.i, r, ""]]);\n    n(7)(r, {\n      hmr: !0,\n      transform: void 0,\n      insertInto: void 0\n    }), r.locals && (e.exports = r.locals);\n  }, function (e, t, n) {\n    (e.exports = n(6)(!1)).push([e.i, ".chat-editor {\\n  position: relative;\\n  padding: 10px;\\n  height: 100%;\\n  font-size: 14px;\\n  box-sizing: border-box;\\n}\\n.chat-editor .mention-list {\\n  position: absolute;\\n  top: 0;\\n  left: -1px;\\n  padding: 5px 0;\\n  background-color: #fff;\\n  border: 1px solid #e8e8e8;\\n  transform: translateY(-100%);\\n}\\n.chat-editor .mention-list .mention {\\n  padding: 5px 10px;\\n  border-bottom: 1px solid #e8e8e8;\\n  cursor: pointer;\\n}\\n.chat-editor .mention-list .mention:last-child {\\n  border-bottom: 0;\\n}\\n.chat-editor .emoji-list {\\n  position: absolute;\\n  top: 0;\\n  left: -1px;\\n  max-width: 96px;\\n  background-color: #fff;\\n  border: 1px solid #e8e8e8;\\n  transform: translateY(-100%);\\n  overflow: hidden;\\n}\\n.chat-editor .emoji-list .emoji {\\n  float: left;\\n  width: 32px;\\n  height: 32px;\\n  cursor: pointer;\\n}\\n.chat-editor .emoji-list .emoji:hover {\\n  background-color: #f8f8f8;\\n}\\n.chat-editor .emoji-list .emoji img {\\n  vertical-align: middle;\\n  max-width: 100%;\\n}\\n.chat-editor .editor {\\n  height: 100%;\\n  overflow: auto;\\n}\\n.chat-editor .editor .at-user {\\n  color: red;\\n}\\n.chat-editor .editor .sys-emoji {\\n  vertical-align: middle;\\n  width: 32px;\\n  height: 32px;\\n}\\n.chat-editor .editor .paste-image {\\n  max-width: 180px;\\n}\\n.chat-editor .insert-link {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  z-index: 10;\\n}\\n", ""]);\n  }, function (e, t) {\n    e.exports = function (e) {\n      var t = [];\n      return t.toString = function () {\n        return this.map(function (t) {\n          var n = function (e, t) {\n            var n,\n                r = e[1] || "",\n                o = e[3];\n            if (!o) return r;\n\n            if (t && "function" == typeof btoa) {\n              var i = (n = o, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(n)))) + " */"),\n                  a = o.sources.map(function (e) {\n                return "/*# sourceURL=" + o.sourceRoot + e + " */";\n              });\n              return [r].concat(a).concat([i]).join("\\n");\n            }\n\n            return [r].join("\\n");\n          }(t, e);\n\n          return t[2] ? "@media " + t[2] + "{" + n + "}" : n;\n        }).join("");\n      }, t.i = function (e, n) {\n        "string" == typeof e && (e = [[null, e, ""]]);\n\n        for (var r = {}, o = 0; o < this.length; o++) {\n          var i = this[o][0];\n          "number" == typeof i && (r[i] = !0);\n        }\n\n        for (o = 0; o < e.length; o++) {\n          var a = e[o];\n          "number" == typeof a[0] && r[a[0]] || (n && !a[2] ? a[2] = n : n && (a[2] = "(" + a[2] + ") and (" + n + ")"), t.push(a));\n        }\n      }, t;\n    };\n  }, function (e, t, n) {\n    var r,\n        o,\n        i,\n        a = {},\n        c = (r = function r() {\n      return window && document && document.all && !window.atob;\n    }, function () {\n      return void 0 === o && (o = r.apply(this, arguments)), o;\n    }),\n        s = (i = {}, function (e, t) {\n      if ("function" == typeof e) return e();\n\n      if (void 0 === i[e]) {\n        var n = function (e, t) {\n          return t ? t.querySelector(e) : document.querySelector(e);\n        }.call(this, e, t);\n\n        if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try {\n          n = n.contentDocument.head;\n        } catch (e) {\n          n = null;\n        }\n        i[e] = n;\n      }\n\n      return i[e];\n    }),\n        u = null,\n        l = 0,\n        f = [],\n        d = n(8);\n\n    function p(e, t) {\n      for (var n = 0; n < e.length; n++) {\n        var r = e[n],\n            o = a[r.id];\n\n        if (o) {\n          o.refs++;\n\n          for (var i = 0; i < o.parts.length; i++) {\n            o.parts[i](r.parts[i]);\n          }\n\n          for (; i < r.parts.length; i++) {\n            o.parts.push(g(r.parts[i], t));\n          }\n        } else {\n          var c = [];\n\n          for (i = 0; i < r.parts.length; i++) {\n            c.push(g(r.parts[i], t));\n          }\n\n          a[r.id] = {\n            id: r.id,\n            refs: 1,\n            parts: c\n          };\n        }\n      }\n    }\n\n    function m(e, t) {\n      for (var n = [], r = {}, o = 0; o < e.length; o++) {\n        var i = e[o],\n            a = t.base ? i[0] + t.base : i[0],\n            c = {\n          css: i[1],\n          media: i[2],\n          sourceMap: i[3]\n        };\n        r[a] ? r[a].parts.push(c) : n.push(r[a] = {\n          id: a,\n          parts: [c]\n        });\n      }\n\n      return n;\n    }\n\n    function h(e, t) {\n      var n = s(e.insertInto);\n      if (!n) throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n      var r = f[f.length - 1];\n      if ("top" === e.insertAt) r ? r.nextSibling ? n.insertBefore(t, r.nextSibling) : n.appendChild(t) : n.insertBefore(t, n.firstChild), f.push(t);else if ("bottom" === e.insertAt) n.appendChild(t);else {\n        if ("object" != _typeof(e.insertAt) || !e.insertAt.before) throw new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n        var o = s(e.insertAt.before, n);\n        n.insertBefore(t, o);\n      }\n    }\n\n    function y(e) {\n      if (null === e.parentNode) return !1;\n      e.parentNode.removeChild(e);\n      var t = f.indexOf(e);\n      0 <= t && f.splice(t, 1);\n    }\n\n    function v(e) {\n      var t = document.createElement("style");\n\n      if (void 0 === e.attrs.type && (e.attrs.type = "text/css"), void 0 === e.attrs.nonce) {\n        var r = n.nc;\n        r && (e.attrs.nonce = r);\n      }\n\n      return b(t, e.attrs), h(e, t), t;\n    }\n\n    function b(e, t) {\n      Object.keys(t).forEach(function (n) {\n        e.setAttribute(n, t[n]);\n      });\n    }\n\n    function g(e, t) {\n      var n, r, o, i, a, c;\n\n      if (t.transform && e.css) {\n        if (!(i = "function" == typeof t.transform ? t.transform(e.css) : t.transform.default(e.css))) return function () {};\n        e.css = i;\n      }\n\n      if (t.singleton) {\n        var s = l++;\n        n = u || (u = v(t)), r = E.bind(null, n, s, !1), o = E.bind(null, n, s, !0);\n      } else o = e.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (a = t, c = document.createElement("link"), void 0 === a.attrs.type && (a.attrs.type = "text/css"), a.attrs.rel = "stylesheet", b(c, a.attrs), h(a, c), r = function (e, t, n) {\n        var r = n.css,\n            o = n.sourceMap,\n            i = void 0 === t.convertToAbsoluteUrls && o;\n        (t.convertToAbsoluteUrls || i) && (r = d(r)), o && (r += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(o)))) + " */");\n        var a = new Blob([r], {\n          type: "text/css"\n        }),\n            c = e.href;\n        e.href = URL.createObjectURL(a), c && URL.revokeObjectURL(c);\n      }.bind(null, n = c, t), function () {\n        y(n), n.href && URL.revokeObjectURL(n.href);\n      }) : (n = v(t), r = function (e, t) {\n        var n = t.css,\n            r = t.media;\n        if (r && e.setAttribute("media", r), e.styleSheet) e.styleSheet.cssText = n;else {\n          for (; e.firstChild;) {\n            e.removeChild(e.firstChild);\n          }\n\n          e.appendChild(document.createTextNode(n));\n        }\n      }.bind(null, n), function () {\n        y(n);\n      });\n\n      return r(e), function (t) {\n        if (t) {\n          if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return;\n          r(e = t);\n        } else o();\n      };\n    }\n\n    e.exports = function (e, t) {\n      if ("undefined" != typeof DEBUG && DEBUG && "object" != (typeof document === "undefined" ? "undefined" : _typeof(document))) throw new Error("The style-loader cannot be used in a non-browser environment");\n      (t = t || {}).attrs = "object" == _typeof(t.attrs) ? t.attrs : {}, t.singleton || "boolean" == typeof t.singleton || (t.singleton = c()), t.insertInto || (t.insertInto = "head"), t.insertAt || (t.insertAt = "bottom");\n      var n = m(e, t);\n      return p(n, t), function (e) {\n        for (var r = [], o = 0; o < n.length; o++) {\n          var i = n[o];\n          (c = a[i.id]).refs--, r.push(c);\n        }\n\n        for (e && p(m(e, t), t), o = 0; o < r.length; o++) {\n          var c;\n\n          if (0 === (c = r[o]).refs) {\n            for (var s = 0; s < c.parts.length; s++) {\n              c.parts[s]();\n            }\n\n            delete a[c.id];\n          }\n        }\n      };\n    };\n\n    var w,\n        j = (w = [], function (e, t) {\n      return w[e] = t, w.filter(Boolean).join("\\n");\n    });\n\n    function E(e, t, n, r) {\n      var o = n ? "" : r.css;\n      if (e.styleSheet) e.styleSheet.cssText = j(t, o);else {\n        var i = document.createTextNode(o),\n            a = e.childNodes;\n        a[t] && e.removeChild(a[t]), a.length ? e.insertBefore(i, a[t]) : e.appendChild(i);\n      }\n    }\n  }, function (e, t) {\n    e.exports = function (e) {\n      var t = "undefined" != typeof window && window.location;\n      if (!t) throw new Error("fixUrls requires window.location");\n      if (!e || "string" != typeof e) return e;\n      var n = t.protocol + "//" + t.host,\n          r = n + t.pathname.replace(/\\/[^\\/]*$/, "/");\n      return e.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (e, t) {\n        var o,\n            i = t.trim().replace(/^"(.*)"$/, function (e, t) {\n          return t;\n        }).replace(/^\'(.*)\'$/, function (e, t) {\n          return t;\n        });\n        return /^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(i) ? e : (o = 0 === i.indexOf("//") ? i : 0 === i.indexOf("/") ? n + i : r + i.replace(/^\\.\\//, ""), "url(" + JSON.stringify(o) + ")");\n      });\n    };\n  }]);\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dist/index.min.js\n')},"./example/index.js":
/*!**************************!*\
  !*** ./example/index.js ***!
  \**************************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ */ "./dist/index.min.js");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(___WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.less */ "./example/index.less");\n/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_3__);\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n // console.log(REditor);\n\nvar mentionList = [{\n  pin: \'abcdef\',\n  nickName: \'Abc.Def\'\n}, {\n  pin: \'ghijkl\',\n  nickName: \'Ghi·Jkl\'\n}, {\n  pin: \'mnopq\',\n  nickName: \'M.NoPQ\'\n}];\n\nvar Demo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Demo, _Component);\n\n  function Demo() {\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Demo).call(this));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getEditorContent", function (data) {\n      var _data$rows = data.rows,\n          rows = _data$rows === void 0 ? [] : _data$rows;\n      var msgArr = rows.map(function (r) {\n        return r.content.replace(/(<br\\/?>)+$/, \'\');\n      });\n      var newMsg = msgArr.join(\'<br/>\').replace(/(<br\\/?>)+$/, \'\'); // console.log(newMsg);\n\n      _this.setState({\n        result: newMsg\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "closeResult", function () {\n      _this.setState({\n        result: \'\'\n      });\n    });\n\n    _this.state = {\n      result: \'\'\n    };\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {//\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n        className: "cw",\n        id: "J_CW"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n        className: "row"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_2___default.a, {\n        value: "\\u7B80\\u6613\\u7248\\uFF0C\\u4E0D\\u652F\\u6301Mention\\uFF08\\u63D0\\u5230\\uFF09\\u529F\\u80FD\\uFF0C\\u8F93\\u5165\\u201C:\\u201D\\u89E6\\u53D1\\u8868\\u60C5\\u9009\\u62E9\\uFF08\\u4F7F\\u7528\\u9ED8\\u8BA4\\u8868\\u60C5\\u5217\\u8868\\uFF09<br/>\\u652F\\u6301\\u7C98\\u8D34\\u56FE\\u6587/\\u56FE\\u7247/\\u622A\\u56FE<br/>Enter\\u67E5\\u770B\\u5185\\u5BB9\\uFF0CCtrl/Command+Enter\\u6362\\u884C",\n        onFinish: this.getEditorContent\n      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n        className: "row"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_2___default.a, {\n        value: "\\u8F93\\u5165\\u201C@\\u201D\\u9009\\u63D0\\u5230\\u7684\\u4EBA\\uFF0C\\u8F93\\u5165\\u201C:\\u201D\\u89E6\\u53D1\\u8868\\u60C5\\u9009\\u62E9\\uFF08\\u4F7F\\u7528\\u9ED8\\u8BA4\\u8868\\u60C5\\u5217\\u8868\\uFF09\\uFF0C\\u652F\\u6301\\u7C98\\u8D34\\u56FE\\u6587/\\u56FE\\u7247/\\u622A\\u56FE",\n        mentionList: mentionList,\n        onFinish: this.getEditorContent\n      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n        className: "row"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_2___default.a, {\n        value: "Enter\\u952E\\u6362\\u884C\\uFF0CCtrl/Command+Enter\\u952E\\u83B7\\u53D6\\u5185\\u5BB9",\n        mentionList: mentionList,\n        finishKey: "CtrlOrCmd+Enter",\n        onFinish: this.getEditorContent\n      })), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n        className: this.state.result ? \'result show\' : \'result\'\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n        className: "title"\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("h3", null, "\\u8F93\\u5165\\u5185\\u5BB9\\u5982\\u4E0B:"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", {\n        className: "close",\n        onClick: this.closeResult\n      }, "\\u5173\\u95ED")), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n        className: "content",\n        dangerouslySetInnerHTML: {\n          __html: this.state.result\n        }\n      })));\n    }\n  }]);\n\n  return Demo;\n}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]);\n\nvar page = document.createElement(\'div\');\npage.style.height = \'100%\';\ndocument.body.appendChild(page);\nObject(react_dom__WEBPACK_IMPORTED_MODULE_1__["render"])(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Demo, null), page);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL2luZGV4LmpzP2M1MTIiXSwibmFtZXMiOlsibWVudGlvbkxpc3QiLCJwaW4iLCJuaWNrTmFtZSIsIkRlbW8iLCJkYXRhIiwicm93cyIsIm1zZ0FyciIsIm1hcCIsInIiLCJjb250ZW50IiwicmVwbGFjZSIsIm5ld01zZyIsImpvaW4iLCJzZXRTdGF0ZSIsInJlc3VsdCIsInN0YXRlIiwiZ2V0RWRpdG9yQ29udGVudCIsImNsb3NlUmVzdWx0IiwiX19odG1sIiwiQ29tcG9uZW50IiwicGFnZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwiaGVpZ2h0IiwiYm9keSIsImFwcGVuZENoaWxkIiwicmVuZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFFQTtDQUlBOztBQUVBLElBQU1BLFdBQVcsR0FBRyxDQUNoQjtBQUNJQyxLQUFHLEVBQUUsUUFEVDtBQUVJQyxVQUFRLEVBQUU7QUFGZCxDQURnQixFQUtoQjtBQUNJRCxLQUFHLEVBQUUsUUFEVDtBQUVJQyxVQUFRLEVBQUU7QUFGZCxDQUxnQixFQVNoQjtBQUNJRCxLQUFHLEVBQUUsT0FEVDtBQUVJQyxVQUFRLEVBQUU7QUFGZCxDQVRnQixDQUFwQjs7SUFlTUMsSTs7Ozs7QUFDRixrQkFBYztBQUFBOztBQUFBOztBQUNWOztBQURVLCtGQVdLLFVBQUNDLElBQUQsRUFBVTtBQUFBLHVCQUNIQSxJQURHLENBQ2pCQyxJQURpQjtBQUFBLFVBQ2pCQSxJQURpQiwyQkFDVixFQURVO0FBRXpCLFVBQUlDLE1BQU0sR0FBR0QsSUFBSSxDQUFDRSxHQUFMLENBQVMsVUFBQUMsQ0FBQyxFQUFJO0FBQ3ZCLGVBQU9BLENBQUMsQ0FBQ0MsT0FBRixDQUFVQyxPQUFWLENBQWtCLGFBQWxCLEVBQWlDLEVBQWpDLENBQVA7QUFDSCxPQUZZLENBQWI7QUFHQSxVQUFNQyxNQUFNLEdBQUdMLE1BQU0sQ0FBQ00sSUFBUCxDQUFZLE9BQVosRUFBcUJGLE9BQXJCLENBQTZCLGFBQTdCLEVBQTRDLEVBQTVDLENBQWYsQ0FMeUIsQ0FNekI7O0FBQ0EsWUFBS0csUUFBTCxDQUFjO0FBQ1ZDLGNBQU0sRUFBRUg7QUFERSxPQUFkO0FBR0gsS0FyQmE7O0FBQUEsMEZBdUJBLFlBQU07QUFDaEIsWUFBS0UsUUFBTCxDQUFjO0FBQ1ZDLGNBQU0sRUFBRTtBQURFLE9BQWQ7QUFHSCxLQTNCYTs7QUFFVixVQUFLQyxLQUFMLEdBQWE7QUFDVEQsWUFBTSxFQUFFO0FBREMsS0FBYjtBQUZVO0FBS2I7Ozs7d0NBRW1CLENBQ2hCO0FBQ0g7Ozs2QkFvQlE7QUFDTCxhQUNJO0FBQUssaUJBQVMsRUFBQyxJQUFmO0FBQW9CLFVBQUUsRUFBQztBQUF2QixTQUNJO0FBQUssaUJBQVMsRUFBQztBQUFmLFNBQ0ksMkRBQUMsd0NBQUQ7QUFBUyxhQUFLLEVBQUMsK1ZBQWY7QUFBZ0gsZ0JBQVEsRUFBRSxLQUFLRTtBQUEvSCxRQURKLENBREosRUFJSTtBQUFLLGlCQUFTLEVBQUM7QUFBZixTQUNJLDJEQUFDLHdDQUFEO0FBQ0ksYUFBSyxFQUFDLDRQQURWO0FBRUksbUJBQVcsRUFBRWhCLFdBRmpCO0FBR0ksZ0JBQVEsRUFBRSxLQUFLZ0I7QUFIbkIsUUFESixDQUpKLEVBVUk7QUFBSyxpQkFBUyxFQUFDO0FBQWYsU0FDSSwyREFBQyx3Q0FBRDtBQUNJLGFBQUssRUFBQywrRUFEVjtBQUVJLG1CQUFXLEVBQUVoQixXQUZqQjtBQUdJLGlCQUFTLEVBQUMsaUJBSGQ7QUFJSSxnQkFBUSxFQUFFLEtBQUtnQjtBQUpuQixRQURKLENBVkosRUFpQkk7QUFBSyxpQkFBUyxFQUFFLEtBQUtELEtBQUwsQ0FBV0QsTUFBWCxHQUFvQixhQUFwQixHQUFvQztBQUFwRCxTQUNJO0FBQUssaUJBQVMsRUFBQztBQUFmLFNBQ0ksK0dBREosRUFFSTtBQUFNLGlCQUFTLEVBQUMsT0FBaEI7QUFBd0IsZUFBTyxFQUFFLEtBQUtHO0FBQXRDLHdCQUZKLENBREosRUFLSTtBQUFLLGlCQUFTLEVBQUMsU0FBZjtBQUF5QiwrQkFBdUIsRUFBRTtBQUFDQyxnQkFBTSxFQUFFLEtBQUtILEtBQUwsQ0FBV0Q7QUFBcEI7QUFBbEQsUUFMSixDQWpCSixDQURKO0FBMkJIOzs7O0VBMURjSywrQzs7QUE2RG5CLElBQU1DLElBQUksR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLEtBQXZCLENBQWI7QUFDQUYsSUFBSSxDQUFDRyxLQUFMLENBQVdDLE1BQVgsR0FBb0IsTUFBcEI7QUFDQUgsUUFBUSxDQUFDSSxJQUFULENBQWNDLFdBQWQsQ0FBMEJOLElBQTFCO0FBRUFPLHdEQUFNLENBQUMsMkRBQUMsSUFBRCxPQUFELEVBQVdQLElBQVgsQ0FBTiIsImZpbGUiOiIuL2V4YW1wbGUvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IFJFZGl0b3IgZnJvbSAnLi4vJztcblxuaW1wb3J0ICcuL2luZGV4Lmxlc3MnO1xuXG4vLyBjb25zb2xlLmxvZyhSRWRpdG9yKTtcblxuY29uc3QgbWVudGlvbkxpc3QgPSBbXG4gICAge1xuICAgICAgICBwaW46ICdhYmNkZWYnLFxuICAgICAgICBuaWNrTmFtZTogJ0FiYy5EZWYnXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBpbjogJ2doaWprbCcsXG4gICAgICAgIG5pY2tOYW1lOiAnR2hpwrdKa2wnXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBpbjogJ21ub3BxJyxcbiAgICAgICAgbmlja05hbWU6ICdNLk5vUFEnXG4gICAgfVxuXTtcblxuY2xhc3MgRGVtbyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICByZXN1bHQ6ICcnXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIC8vXG4gICAgfVxuXG4gICAgZ2V0RWRpdG9yQ29udGVudCA9IChkYXRhKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgcm93cyA9IFtdIH0gPSBkYXRhO1xuICAgICAgICBsZXQgbXNnQXJyID0gcm93cy5tYXAociA9PiB7XG4gICAgICAgICAgICByZXR1cm4gci5jb250ZW50LnJlcGxhY2UoLyg8YnJcXC8/PikrJC8sICcnKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IG5ld01zZyA9IG1zZ0Fyci5qb2luKCc8YnIvPicpLnJlcGxhY2UoLyg8YnJcXC8/PikrJC8sICcnKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2cobmV3TXNnKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICByZXN1bHQ6IG5ld01zZ1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjbG9zZVJlc3VsdCA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICByZXN1bHQ6ICcnXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY3dcIiBpZD1cIkpfQ1dcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgICAgICAgICAgICA8UkVkaXRvciB2YWx1ZT1cIueugOaYk+eJiO+8jOS4jeaUr+aMgU1lbnRpb27vvIjmj5DliLDvvInlip/og73vvIzovpPlhaXigJw64oCd6Kem5Y+R6KGo5oOF6YCJ5oup77yI5L2/55So6buY6K6k6KGo5oOF5YiX6KGo77yJPGJyLz7mlK/mjIHnspjotLTlm77mlocv5Zu+54mHL+aIquWbvjxici8+RW50ZXLmn6XnnIvlhoXlrrnvvIxDdHJsL0NvbW1hbmQrRW50ZXLmjaLooYxcIiBvbkZpbmlzaD17dGhpcy5nZXRFZGl0b3JDb250ZW50fSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgICAgICAgICAgIDxSRWRpdG9yIFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9XCLovpPlhaXigJxA4oCd6YCJ5o+Q5Yiw55qE5Lq677yM6L6T5YWl4oCcOuKAneinpuWPkeihqOaDhemAieaLqe+8iOS9v+eUqOm7mOiupOihqOaDheWIl+ihqO+8ie+8jOaUr+aMgeeymOi0tOWbvuaWhy/lm77niYcv5oiq5Zu+XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lbnRpb25MaXN0PXttZW50aW9uTGlzdH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRmluaXNoPXt0aGlzLmdldEVkaXRvckNvbnRlbnR9IC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgPFJFZGl0b3IgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT1cIkVudGVy6ZSu5o2i6KGM77yMQ3RybC9Db21tYW5kK0VudGVy6ZSu6I635Y+W5YaF5a65XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lbnRpb25MaXN0PXttZW50aW9uTGlzdH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbmlzaEtleT1cIkN0cmxPckNtZCtFbnRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkZpbmlzaD17dGhpcy5nZXRFZGl0b3JDb250ZW50fSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXt0aGlzLnN0YXRlLnJlc3VsdCA/ICdyZXN1bHQgc2hvdycgOiAncmVzdWx0J30+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz7ovpPlhaXlhoXlrrnlpoLkuIs6PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNsb3NlXCIgb25DbGljaz17dGhpcy5jbG9zZVJlc3VsdH0+5YWz6ZetPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250ZW50XCIgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tfX2h0bWw6IHRoaXMuc3RhdGUucmVzdWx0fX0gLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuY29uc3QgcGFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xucGFnZS5zdHlsZS5oZWlnaHQgPSAnMTAwJSc7XG5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHBhZ2UpO1xuXG5yZW5kZXIoPERlbW8gLz4sIHBhZ2UpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./example/index.js\n')},"./example/index.less":
/*!****************************!*\
  !*** ./example/index.less ***!
  \****************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('\nvar content = __webpack_require__(/*! !../node_modules/css-loader!../node_modules/less-loader/dist/cjs.js!./index.less */ "./node_modules/css-loader/index.js!./node_modules/less-loader/dist/cjs.js!./example/index.less");\n\nif(typeof content === \'string\') content = [[module.i, content, \'\']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {"hmr":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL2luZGV4Lmxlc3M/ZTYxMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLHdMQUE0Rjs7QUFFbEgsNENBQTRDLFFBQVM7O0FBRXJEO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLG1HQUFnRDs7QUFFckU7O0FBRUEsR0FBRyxLQUFVLEVBQUUiLCJmaWxlIjoiLi9leGFtcGxlL2luZGV4Lmxlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXgubGVzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXgubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4Lmxlc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./example/index.less\n')},"./node_modules/css-loader/index.js!./node_modules/less-loader/dist/cjs.js!./example/index.less":
/*!*********************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js!./example/index.less ***!
  \*********************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);\n// imports\n\n\n// module\nexports.push([module.i, "html,\\nbody {\\n  width: 100%;\\n  height: 100%;\\n  font: 14px/1.5 \\"\\\\5FAE\\\\8F6F\\\\96C5\\\\9ED1\\", sans-serif;\\n}\\nbody {\\n  margin: 0;\\n}\\nbody .cw {\\n  position: relative;\\n  padding-top: 50px;\\n}\\nbody .cw .row {\\n  margin-top: 50px;\\n  padding: 0 10px;\\n}\\nbody .cw .chat-editor {\\n  height: 120px;\\n  border: 1px solid #e0e0e0;\\n}\\nbody .cw .result {\\n  display: none;\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  min-width: 600px;\\n  transform: translate(-50%, -50%);\\n  background-color: #fff;\\n  border: 1px solid #e0e0e0;\\n  border-radius: 5px;\\n  overflow: hidden;\\n}\\nbody .cw .result.show {\\n  display: block;\\n}\\nbody .cw .result .title h3 {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 0;\\n  padding: 10px;\\n  font-size: 16px;\\n  font-weight: normal;\\n}\\nbody .cw .result .title .close {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin-left: 20px;\\n  font-size: 12px;\\n  color: #f50;\\n  cursor: pointer;\\n}\\nbody .cw .result .content {\\n  padding: 10px;\\n  font-size: 12px;\\n}\\nbody .cw .result .content .at-user {\\n  color: #39f;\\n}\\nbody .cw .result .content .paste-image {\\n  max-width: 180px;\\n}\\nbody .cw .result .content .sys-emoji {\\n  max-width: 32px;\\n  vertical-align: middle;\\n}\\n", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlL2luZGV4Lmxlc3M/MzYyOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyw2RkFBNEM7QUFDL0U7OztBQUdBO0FBQ0EsY0FBYyxRQUFTLGdCQUFnQixnQkFBZ0IsaUJBQWlCLDREQUE0RCxHQUFHLFFBQVEsY0FBYyxHQUFHLFlBQVksdUJBQXVCLHNCQUFzQixHQUFHLGlCQUFpQixxQkFBcUIsb0JBQW9CLEdBQUcseUJBQXlCLGtCQUFrQiw4QkFBOEIsR0FBRyxvQkFBb0Isa0JBQWtCLG9CQUFvQixhQUFhLGNBQWMscUJBQXFCLHFDQUFxQywyQkFBMkIsOEJBQThCLHVCQUF1QixxQkFBcUIsR0FBRyx5QkFBeUIsbUJBQW1CLEdBQUcsOEJBQThCLDBCQUEwQiwyQkFBMkIsY0FBYyxrQkFBa0Isb0JBQW9CLHdCQUF3QixHQUFHLGtDQUFrQywwQkFBMEIsMkJBQTJCLHNCQUFzQixvQkFBb0IsZ0JBQWdCLG9CQUFvQixHQUFHLDZCQUE2QixrQkFBa0Isb0JBQW9CLEdBQUcsc0NBQXNDLGdCQUFnQixHQUFHLDBDQUEwQyxxQkFBcUIsR0FBRyx3Q0FBd0Msb0JBQW9CLDJCQUEyQixHQUFHOztBQUVodkMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2V4YW1wbGUvaW5kZXgubGVzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiaHRtbCxcXG5ib2R5IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgZm9udDogMTRweC8xLjUgXFxcIlxcXFw1RkFFXFxcXDhGNkZcXFxcOTZDNVxcXFw5RUQxXFxcIiwgc2Fucy1zZXJpZjtcXG59XFxuYm9keSB7XFxuICBtYXJnaW46IDA7XFxufVxcbmJvZHkgLmN3IHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHBhZGRpbmctdG9wOiA1MHB4O1xcbn1cXG5ib2R5IC5jdyAucm93IHtcXG4gIG1hcmdpbi10b3A6IDUwcHg7XFxuICBwYWRkaW5nOiAwIDEwcHg7XFxufVxcbmJvZHkgLmN3IC5jaGF0LWVkaXRvciB7XFxuICBoZWlnaHQ6IDEyMHB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UwZTBlMDtcXG59XFxuYm9keSAuY3cgLnJlc3VsdCB7XFxuICBkaXNwbGF5OiBub25lO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiA1MCU7XFxuICBsZWZ0OiA1MCU7XFxuICBtaW4td2lkdGg6IDYwMHB4O1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2UwZTBlMDtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcbmJvZHkgLmN3IC5yZXN1bHQuc2hvdyB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuYm9keSAuY3cgLnJlc3VsdCAudGl0bGUgaDMge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBmb250LXNpemU6IDE2cHg7XFxuICBmb250LXdlaWdodDogbm9ybWFsO1xcbn1cXG5ib2R5IC5jdyAucmVzdWx0IC50aXRsZSAuY2xvc2Uge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xcbiAgZm9udC1zaXplOiAxMnB4O1xcbiAgY29sb3I6ICNmNTA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbmJvZHkgLmN3IC5yZXN1bHQgLmNvbnRlbnQge1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGZvbnQtc2l6ZTogMTJweDtcXG59XFxuYm9keSAuY3cgLnJlc3VsdCAuY29udGVudCAuYXQtdXNlciB7XFxuICBjb2xvcjogIzM5ZjtcXG59XFxuYm9keSAuY3cgLnJlc3VsdCAuY29udGVudCAucGFzdGUtaW1hZ2Uge1xcbiAgbWF4LXdpZHRoOiAxODBweDtcXG59XFxuYm9keSAuY3cgLnJlc3VsdCAuY29udGVudCAuc3lzLWVtb2ppIHtcXG4gIG1heC13aWR0aDogMzJweDtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js!./node_modules/less-loader/dist/cjs.js!./example/index.less\n')}});